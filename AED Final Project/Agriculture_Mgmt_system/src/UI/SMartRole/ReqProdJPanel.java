package UI.SMartRole;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import Model.EcoSys;
import Model.Enterprise.Enterprise;
import Model.Organization.OrgSMart;
import Model.Organization.Organization;
import Model.Organization.OrgManagement;
import Model.Organization.OrgStoreWH;
import UI.WHManagerRole.StoreWHworkAreaJPanel;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.YieldRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;


/**
 *
 * @author shardul
 */
public class ReqProdJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;

    /**
     * Creates new form ReqProdJPanel
     */
    public ReqProdJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = account;
//        valLBL.setText(enterprise.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bkBtn = new javax.swing.JButton();
        cropjLabel1 = new javax.swing.JLabel();
        cpname = new javax.swing.JTextField();
        cropjLabel2 = new javax.swing.JLabel();
        cpqty = new javax.swing.JTextField();
        reqbt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bkBtn.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        bkBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CMback.png"))); // NOI18N
        bkBtn.setText("Back");
        bkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bkBtnActionPerformed(evt);
            }
        });
        add(bkBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 28, -1, 50));

        cropjLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cropjLabel1.setText("Crop Name");
        cropjLabel1.setOpaque(true);
        add(cropjLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 134, 110, -1));

        cpname.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cpname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpnameActionPerformed(evt);
            }
        });
        add(cpname, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 134, 229, -1));

        cropjLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cropjLabel2.setText("Crop Quantity");
        cropjLabel2.setOpaque(true);
        add(cropjLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 174, 106, -1));

        cpqty.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cpqty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpqtyActionPerformed(evt);
            }
        });
        cpqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cpqtyKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cpqtyKeyTyped(evt);
            }
        });
        add(cpqty, new org.netbeans.lib.awtextra.AbsoluteConstraints(469, 174, 229, -1));

        reqbt.setBackground(new java.awt.Color(255, 102, 102));
        reqbt.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        reqbt.setText("Request Produce");
        reqbt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqbtActionPerformed(evt);
            }
        });
        add(reqbt, new org.netbeans.lib.awtextra.AbsoluteConstraints(475, 219, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UISmartRole.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 770));
    }// </editor-fold>//GEN-END:initComponents

    private void bkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bkBtnActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SMartWorkAreaJPanel cwmart = (SMartWorkAreaJPanel) component;
//        cwmart.populateReqTable();


        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_bkBtnActionPerformed

    private void cpqtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpqtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpqtyActionPerformed

    private void cpqtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpqtyKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpqtyKeyPressed

    private void cpqtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cpqtyKeyTyped
        // Digits, back space and delete keys can be pressed:
        char varchar12 = evt.getKeyChar();

        /*submit the inputs and wait the output

        creates new panel for new role in the organization

        data to be defined.

        data passed in the function.

        */
        if(!(Character.isDigit(varchar12)) || (varchar12 == KeyEvent.VK_BACK_SPACE) || (varchar12 == KeyEvent.VK_DELETE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_cpqtyKeyTyped

    private void cpnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpnameActionPerformed

    private void reqbtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqbtActionPerformed
        if (cpname.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Kindly enter product name");
        }
        else{

            String message = cpname.getText();

            YieldRequest request = new YieldRequest();
            request.setMessage(message);
            request.setSender(userAccount);

            /*submit the inputs and wait the output

            creates new panel for new role in the organization

            data to be defined.

            data passed in the function.

            */

            request.setStatus("Forwarded to the office staff");
            if (Integer.parseInt(cpqty.getText())<1)
            {
                JOptionPane.showMessageDialog(null,"Kindly enter a value greater than 0" );
            }
            else{
                request.setHarvestQty(Integer.parseInt(cpqty.getText()));

            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                if (organization instanceof OrgStoreWH){
                    org = organization;
                    break;
                }
                }

                /*submit the inputs and wait the output

                creates new panel for new role in the organization

                data to be defined.

                data passed in the function.

                */
                if (org!=null){
                    org.getWorkQueue().getWorkRequestList().add(request);
                    userAccount.getWorkQueue().getWorkRequestList().add(request);
                }
                JOptionPane.showMessageDialog(null,"Request has been forwarded to supplier");
            }
        }
        cpname.setText("");
        cpqty.setText("");

    }//GEN-LAST:event_reqbtActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bkBtn;
    private javax.swing.JTextField cpname;
    private javax.swing.JTextField cpqty;
    private javax.swing.JLabel cropjLabel1;
    private javax.swing.JLabel cropjLabel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton reqbt;
    // End of variables declaration//GEN-END:variables
}
