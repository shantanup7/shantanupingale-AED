/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SMartRole;

import Model.EcoSys;
import Model.Enterprise.Enterprise;
import Model.Enterprise.FoodDeptEnt;
import Model.Enterprise.SMartEnt;

import Model.Organization.OrgSMart;
import Model.YieldReview.YieldReview;
import Model.YieldReview.YieldReviewDir;
import Model.UserAccount.UserAccount;
import Model.WorkQueue.YieldRequest;
import Model.WorkQueue.WorkRequest;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shardul
 */
public class SMartWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private OrgSMart organization;
    private UserAccount userAccount1;
    private FoodDeptEnt enterprise;
    private Enterprise enterprise1;
    private YieldReviewDir prDirectory;
    private ButtonGroup qualitybg1 = new ButtonGroup();
    private ButtonGroup shelfbg = new ButtonGroup();

    /**
     * Creates new form SMartWorkAreaJPanel
     */
    public SMartWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, OrgSMart organization, Enterprise enterprise,YieldReviewDir prDirectory) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise1 = enterprise;
        this.userAccount1 = account;
        this.prDirectory = prDirectory;
        entLbl.setText(enterprise.getName());
        populateReqTable();
        qualitygroupbutton();
        shelfgroupbutton();
    }
    
    private void qualitygroupbutton() {
        qualitybg1.add(exe1RadioButton);
        qualitybg1.add(vg1RadioButton);
        qualitybg1.add(g1RadioButton);
        qualitybg1.add(avg1RadioButton);
        qualitybg1.add(p1RadioButton);
    }
    
    private void shelfgroupbutton() {
        shelfbg.add(exe2RadioButton);
        shelfbg.add(vg2RadioButton);
        shelfbg.add(g2RadioButton);
        shelfbg.add(avg2RadioButton);
        shelfbg.add(p2RadioButton);
    }
    
//    public void populateTab(){
//        DefaultTableModel model = (DefaultTableModel) SupMartjTable.getModel();
//        
//        model.setRowCount(0);
//        for (WorkRequest req : userAccount1.getWorkQueue().getWorkRequestList()){
//            Object[] row = new Object[6];
//            row[0] = req.getMessage();
//            row[1] = req.getReceiver();
//            row[2] = req.getStatus();
//            row[3] = req.getHarvestQty();
//            model.addRow(row);
//        }
//    }
    
    
    public void populateReqTable(){
        DefaultTableModel model = (DefaultTableModel) SupMartjTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest req : userAccount1.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[6];
            row[0] = req.getMessage();
            row[1] = req.getReceiver();
            row[2] = req.getStatus();
            row[3] = req.getHarvestQty();
            model.addRow(row);
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        SupMartjTable = new javax.swing.JTable();
        reqSmartJBtn = new javax.swing.JButton();
        avg1RadioButton = new javax.swing.JRadioButton();
        p1RadioButton = new javax.swing.JRadioButton();
        g1RadioButton = new javax.swing.JRadioButton();
        vg1RadioButton = new javax.swing.JRadioButton();
        exe1RadioButton = new javax.swing.JRadioButton();
        sprodqtjLabel = new javax.swing.JLabel();
        sprodSLjLabel = new javax.swing.JLabel();
        exe2RadioButton = new javax.swing.JRadioButton();
        vg2RadioButton = new javax.swing.JRadioButton();
        g2RadioButton = new javax.swing.JRadioButton();
        avg2RadioButton = new javax.swing.JRadioButton();
        p2RadioButton = new javax.swing.JRadioButton();
        entLbl = new javax.swing.JLabel();
        enterpriseLabel1 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        revBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SupMartjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Reveiver", "Status", "Quality"
            }
        ));
        jScrollPane1.setViewportView(SupMartjTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 669, 155));

        reqSmartJBtn.setBackground(new java.awt.Color(51, 51, 255));
        reqSmartJBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        reqSmartJBtn.setText("Request Yield");
        reqSmartJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqSmartJBtnActionPerformed(evt);
            }
        });
        add(reqSmartJBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 300, -1, 38));

        avg1RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        avg1RadioButton.setText("Average");
        avg1RadioButton.setEnabled(false);
        avg1RadioButton.setOpaque(true);
        add(avg1RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 370, -1, -1));

        p1RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        p1RadioButton.setText("Poor");
        p1RadioButton.setEnabled(false);
        p1RadioButton.setOpaque(true);
        add(p1RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 370, -1, -1));

        g1RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        g1RadioButton.setText("Good");
        g1RadioButton.setEnabled(false);
        g1RadioButton.setOpaque(true);
        add(g1RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 370, -1, -1));

        vg1RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        vg1RadioButton.setText("Very Good");
        vg1RadioButton.setEnabled(false);
        vg1RadioButton.setOpaque(true);
        vg1RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vg1RadioButtonActionPerformed(evt);
            }
        });
        add(vg1RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 370, -1, -1));

        exe1RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        exe1RadioButton.setText("Excellent");
        exe1RadioButton.setEnabled(false);
        exe1RadioButton.setOpaque(true);
        add(exe1RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, -1, -1));

        sprodqtjLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sprodqtjLabel.setText("Produce Quality");
        sprodqtjLabel.setOpaque(true);
        add(sprodqtjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 370, 150, -1));

        sprodSLjLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        sprodSLjLabel.setText("Produce Shelf Life");
        sprodSLjLabel.setOpaque(true);
        add(sprodSLjLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 150, -1));

        exe2RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        exe2RadioButton.setText("Excellent");
        exe2RadioButton.setEnabled(false);
        exe2RadioButton.setOpaque(true);
        exe2RadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exe2RadioButtonActionPerformed(evt);
            }
        });
        add(exe2RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, -1, -1));

        vg2RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        vg2RadioButton.setText("Very Good");
        vg2RadioButton.setEnabled(false);
        vg2RadioButton.setOpaque(true);
        add(vg2RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, -1, -1));

        g2RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        g2RadioButton.setText("Good");
        g2RadioButton.setEnabled(false);
        g2RadioButton.setOpaque(true);
        add(g2RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 410, -1, -1));

        avg2RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        avg2RadioButton.setText("Average");
        avg2RadioButton.setEnabled(false);
        avg2RadioButton.setOpaque(true);
        add(avg2RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 410, -1, -1));

        p2RadioButton.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        p2RadioButton.setText("Poor");
        p2RadioButton.setEnabled(false);
        p2RadioButton.setOpaque(true);
        add(p2RadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 410, -1, -1));

        entLbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(entLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 36, 158, 26));

        enterpriseLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        enterpriseLabel1.setText("Enterprise :");
        enterpriseLabel1.setOpaque(true);
        add(enterpriseLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 100, 30));

        submitButton.setBackground(new java.awt.Color(255, 102, 102));
        submitButton.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 500, 158, 43));

        revBTN.setBackground(new java.awt.Color(255, 153, 102));
        revBTN.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        revBTN.setText("Review Yield");
        revBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revBTNActionPerformed(evt);
            }
        });
        add(revBTN, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 170, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/UISmartRole.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setOpaque(true);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-360, 0, 1590, 800));
    }// </editor-fold>//GEN-END:initComponents
//    private void checkCompletion() {
//    int tmp21 = wrkReqJTab.getRowCount();
//    final String cultivateName = wrkReqJTab.getModel().getValueAt(tmp21, 0).toString();
//    String fnlStat = wrkReqJTab.getModel().getValueAt(tmp21, 2).toString();
//    final int qty = Integer.parseInt((String.valueOf(wrkReqJTab.getModel().getValueAt(tmp21, 4))));
//    if(fnlStat.equalsIgnoreCase("Request Completed!")){
//        int pause = 2111; //ms
//            ActionListener tskPerf = new ActionListener() {
//                @Override
//                public void actionPerformed(ActionEvent evt) {
//                JOptionPane.showMessageDialog(null, "The request for " +cultivateName+ " of quantity " +qty+ " has been successfully delivered!");      
//                }
//  };
//                Timer tmw = new Timer(pause, tskPerf);
//                tmw.setRepeats(false);
//                tmw.start();
//      
//    }
//    }
    private void reqSmartJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqSmartJBtnActionPerformed

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestProduceJPanel", new ReqProdJPanel(userProcessContainer, userAccount1, enterprise1));
        layout.next(userProcessContainer);

    }//GEN-LAST:event_reqSmartJBtnActionPerformed

    private void vg1RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vg1RadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vg1RadioButtonActionPerformed

    private void exe2RadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exe2RadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exe2RadioButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = SupMartjTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Kindly select a record");
            return;
        }
        else{
            String status = SupMartjTable.getValueAt(selectedRow, 2).toString();
            String cropName = SupMartjTable.getValueAt(selectedRow, 0).toString();
            String farmerName = SupMartjTable.getValueAt(selectedRow, 1).toString();
            if(status.equalsIgnoreCase("Request fulfilled") || status.equalsIgnoreCase("Completed") || status.equalsIgnoreCase("done") ){
                YieldReview pr = prDirectory.addYieldReview();
                pr.setHarvestName(cropName);
                pr.setFarmerName(farmerName);

                String quality = null;
                if(exe1RadioButton.isSelected())
                quality = "Excellent";
                else if (vg1RadioButton.isSelected())
                quality = "Very Good";
                else if (g1RadioButton.isSelected())
                quality = "Good";
                else if (avg1RadioButton.isSelected())
                quality = "Average";
                else if(p1RadioButton.isSelected())
                quality = "Poor";

                String shelfLife = null;

                if(exe2RadioButton.isSelected())
                shelfLife = "Excellent";
                else if (vg2RadioButton.isSelected())
                shelfLife = "Very Good";
                else if (g2RadioButton.isSelected())
                shelfLife = "Good";
                else if (avg2RadioButton.isSelected())
                shelfLife = "Average";
                else if(p2RadioButton.isSelected())
                shelfLife = "Poor";
                if (shelfLife == null && quality == null)
                {
                    JOptionPane.showMessageDialog(null,"A field is missing");
                }
                else
                {
                    pr.setYieldQlty(quality);
                    pr.setYieldStorageLife(shelfLife);
//                    pr.setExtraRevirws(extraRevwText.getText());
                }
            }

            exe1RadioButton.setEnabled(false);
            vg1RadioButton.setEnabled(false);
            g1RadioButton.setEnabled(false);
            avg1RadioButton.setEnabled(false);
            p1RadioButton.setEnabled(false);

            exe2RadioButton.setEnabled(false);
            vg2RadioButton.setEnabled(false);
            g2RadioButton.setEnabled(false);
            avg2RadioButton.setEnabled(false);
            p2RadioButton.setEnabled(false);

//            extraRevwText.setEnabled(false);
        }
        qualitybg1.clearSelection();
        shelfbg.clearSelection();

//        extraRevwText.setText(" ");
    }//GEN-LAST:event_submitButtonActionPerformed

    private void revBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revBTNActionPerformed
        // TODO add your handling code here:
        int scltRecord = SupMartjTable.getSelectedRow();

        if (scltRecord < 0){
            JOptionPane.showMessageDialog(null, "Kindly select a record");
            return;
        }

        String status = SupMartjTable.getValueAt(scltRecord, 2).toString();

        if(status.equalsIgnoreCase("Request fulfilled") || status.equalsIgnoreCase("Completed") || status.equalsIgnoreCase("done")){
            exe1RadioButton.setEnabled(true);
            vg1RadioButton.setEnabled(true);
            g1RadioButton.setEnabled(true);
            avg1RadioButton.setEnabled(true);
            p1RadioButton.setEnabled(true);

            exe2RadioButton.setEnabled(true);
            vg2RadioButton.setEnabled(true);
            g2RadioButton.setEnabled(true);
            avg2RadioButton.setEnabled(true);
            p2RadioButton.setEnabled(true);

//            extraRevwText.setEnabled(true);

        }
        else{
            JOptionPane.showMessageDialog(null, "Request not Completed");
        }

    }//GEN-LAST:event_revBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SupMartjTable;
    private javax.swing.JRadioButton avg1RadioButton;
    private javax.swing.JRadioButton avg2RadioButton;
    private javax.swing.JLabel entLbl;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JRadioButton exe1RadioButton;
    private javax.swing.JRadioButton exe2RadioButton;
    private javax.swing.JRadioButton g1RadioButton;
    private javax.swing.JRadioButton g2RadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton p1RadioButton;
    private javax.swing.JRadioButton p2RadioButton;
    private javax.swing.JButton reqSmartJBtn;
    private javax.swing.JButton revBTN;
    private javax.swing.JLabel sprodSLjLabel;
    private javax.swing.JLabel sprodqtjLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JRadioButton vg1RadioButton;
    private javax.swing.JRadioButton vg2RadioButton;
    // End of variables declaration//GEN-END:variables
}
